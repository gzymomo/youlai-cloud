server:
  port: 9999
  reactive:
    session:
      cookie:
        name: GATEWAY_SESSION_ID
        # 禁止JS读取cookie
        http-only: true
        secure: true
        same-site: none

spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  cloud:
    nacos:
      # 注册中心
      discovery:
        server-addr: http://localhost:8848
        namespace: cloud-namespace-id
      # 配置中心
      config:
        server-addr: http://localhost:8848
        namespace: cloud-namespace-id
        file-extension: yaml
        shared-configs[0]:
          data-id: youlai-common.yaml
          namespace: cloud-namespace-id
          refresh: true

  security:
    oauth2:
      client:
        registration:
          gateway-client-authorization-code:
            provider: spring
            client-id: gateway-client
            client-secret: secret
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            # {baseUrl}/login/oauth2/code/{registrationId}
            #"http://127.0.0.1:9999/login/oauth2/code/gateway-client-authorization-code"
            redirect-uri: "http://127.0.0.1:9999/login/oauth2/code/gateway-client-authorization-code"
            scope: openid,message.read,message.write
        provider:
          spring:
            issuer-uri: http://127.0.0.1:9000
  session:
    # Spring Session超时时间(单位秒，默认1800s)
    timeout: 1800
    # Spring Session持久化类型
    store-type: redis
    # Spring Session Redis配置
    redis:
      cleanup-cron: 0 * * * * *
      namespace: spring:session
      save-mode: on-set-attribute
      flush-mode: on_save
      configure-action: notify_keyspace_events

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    #org.springframework.boot.autoconfigure: DEBUG